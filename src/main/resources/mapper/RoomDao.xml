<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qiein.erp.pk.web.dao.RoomDao" >
  <resultMap id="BaseResultMap" type="com.qiein.erp.pk.web.entity.po.Room" >
    <id column="room_id" property="roomId" jdbcType="INTEGER" />
    <result column="venue_id" property="venueId" jdbcType="INTEGER" />
    <result column="room_name" property="roomName" jdbcType="VARCHAR" />
    <result column="room_level" property="roomLevel" jdbcType="INTEGER" />
    <result column="room_type" property="roomType" jdbcType="SMALLINT" />
    <result column="priority" property="priority" jdbcType="SMALLINT" />
    <result column="room_status" property="roomStatus" jdbcType="SMALLINT" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="roomSelectMap" type="com.qiein.erp.pk.web.entity.vo.RoomSelectVO">
    <id column="venue_id" property="venueId"/>
    <result column="venue_name" property="venueName"/>
    <collection property="rooms" ofType="com.qiein.erp.pk.web.entity.po.RoomPO">
      <result column="room_id" property="roomId"/>
      <result column="room_name" property="roomName"/>
    </collection>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="map" >
    delete from hm_erp_venue_room
    where room_id = #{roomId} and company_id = #{companyId}
  </delete>
  <insert id="insert" parameterType="com.qiein.erp.pk.web.entity.po.Room" >
    insert into hm_erp_venue_room (room_id, venue_id, room_name, 
      room_level, room_type,room_status, company_id,priority)
    select #{roomId}, #{venueId}, #{roomName},
            #{roomLevel}, #{roomType}, #{roomStatus}, #{companyId},
            (SELECT IFNULL(MAX(priority), 0) + 1
                     FROM hm_erp_venue_room
                     WHERE company_id = #{companyId})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.qiein.erp.pk.web.entity.po.Room" >
    update hm_erp_venue_room
    set venue_id = #{venueId},
      room_name = #{roomName},
      room_level = #{roomLevel},
      room_type = #{roomType},
      priority = #{priority},
      room_status = #{roomStatus},
      company_id = #{companyId}
    where room_id = #{roomId}
    and company_id = #{companyId}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select room_id, venue_id, room_name, room_level, room_type, priority, room_status, 
    company_id
    from hm_erp_venue_room
    where room_id = #{roomId} and company_id =#{companyId}
  </select>

    <select id="selectAll" resultMap="BaseResultMap">
         select room_id, venue_id, room_name, room_level, room_type, priority, room_status,
    company_id
    from hm_erp_venue_room room
    where room.room_type = #{roomType} and room.company_id = #{companyId}
    </select>


  <select id="roomSelect" resultMap="roomSelectMap">
        SELECT
        concat(room.venue_id,"-",room.room_id) room_id,
        room.room_name,
        room.venue_id,
        venue.venue_name
    FROM
        hm_erp_venue_room room
    LEFT JOIN hm_erp_venue venue ON venue.id = room.venue_id
    AND venue.company_id = room.company_id
    WHERE
        room.room_type = #{type}
    AND room.venue_id in (${venueIds})
    and room.company_id = #{companyId}
  </select>


  <sql id="baseColumn">
        room_id,venue_id,room_name,room_level,room_type,priority,room_status,company_id
   </sql>

  <select id="findRoomByVenueId" resultMap="BaseResultMap"  parameterType="map">
    select
    <include refid="baseColumn"/>
    from hm_erp_venue_room
    where company_id = #{companyId}
    and venue_id = #{venueId}
    and room_type = #{roomType}
  </select>

  <update id="roomSort" parameterType="ArrayList">

    <foreach collection="list" index="index" item="item" separator=";">
      update hm_erp_venue_room set priority = #{item.priority}
      where room_id = #{item.roomId}
      and company_id = #{item.companyId}
      and room_type = #{item.roomType}
    </foreach>


  </update>

  <update id="roomLevelSort" parameterType="ArrayList" >

    <foreach collection="list" index="index" item="item" separator=";">
      update hm_crm_dictionary set priority = #{item.priority}
      where COMPANYID = #{item.companyId}
      and DICTYPE = #{item.roomLevelType}
      and DICCODE = #{item.roomLevelCode}
    </foreach>


  </update>

  <insert id="addRoomLevel" parameterType="com.qiein.erp.pk.web.entity.dto.LevelAndRoomDTO" >


   INSERT INTO
        hm_crm_dictionary
        (DICTYPE, DICCODE, DICNAME, PRIORITY, COMPANYID)
        SELECT
            #{roomLevelType},
            (SELECT IFNULL(MAX(DICCODE), 0) + 1
             FROM hm_crm_dictionary
             WHERE COMPANYID = #{companyId} AND DICTYPE = #{roomLevelType}),
            #{roomLevelName},
            (SELECT IFNULL(MAX(PRIORITY), 0) + 1
             FROM hm_crm_dictionary
             WHERE COMPANYID = #{companyId} AND DICTYPE = #{roomLevelType}),
            #{companyId}
  </insert>

  <insert id="batAddRoom" parameterType="ArrayList">
    insert into hm_erp_venue_room
    (room_id, venue_id, room_name,room_level,room_type,priority,room_status,company_id)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.roomId}, #{item.venueId}, #{item.roomName},
      #{item.roomLevel}, #{item.roomType}, #{item.priority},
      #{item.roomStatus}, #{item.companyId})
    </foreach>

  </insert>


  <resultMap id="RoomLevelMap" type="com.qiein.erp.pk.web.entity.dto.LevelAndRoomDTO" >

    <id column="ID" property="roomLevelId" jdbcType="INTEGER" />
    <result column="DICTYPE" property="roomLevelType" />
    <result column="DICCODE" property="roomLevelCode"  />
    <result column="DICNAME" property="roomLevelName" />
    <result column="PRIORITY" property="priority"/>
    <result column="ISSHOW" property="roomLevelStatus" />
    <result column="COMPANYID" property="companyId" />
    <collection property="rooms" ofType="com.qiein.erp.pk.web.entity.po.Room" resultMap="BaseResultMap"/>

  </resultMap>


  <select id="findRoomByLevelId" resultMap="BaseResultMap">
    select room_id, venue_id, room_name, room_level, room_type, priority, room_status,
    company_id
    from hm_erp_venue_room
    where company_id ={companyId} and room_type = #{roomType}

  </select>

  <update id="batUpdateRoom" parameterType="ArrayList">

    <foreach collection="list" index="index" item="item" separator=";">
      update hm_erp_venue_room
      set venue_id = #{item.venueId},
      room_name = #{item.roomName},
      room_level = #{item.roomLevel},
      room_type = #{item.roomType},
      priority = #{item.priority},
      room_status = #{item.roomStatus},
      company_id = #{item.companyId}
      where room_id = #{item.roomId}
      and company_id = #{item.companyId}
    </foreach>

  </update>

  <insert id="batInsertOrUpdate" parameterType="ArrayList">

    INSERT INTO hm_erp_venue_room
    (room_id, venue_id, room_name, room_level, room_type, priority, room_status, company_id)
    VALUES
    <foreach collection="list" index="index" item="item" separator=",">
        (#{item.roomId}, #{item.venueId}, #{item.roomName}, #{item.roomLevel}, #{item.roomType},
      #{item.priority}, #{item.roomStatus},#{item.companyId})
    </foreach>
    ON DUPLICATE KEY UPDATE
                            room_id = values (room_id) AND
                            venue_id = values (venue_id) AND
                            company_id = values (company_id);
  </insert>

  <update id="updateRoomLevel" parameterType="com.qiein.erp.pk.web.entity.dto.LevelAndRoomDTO">

      update hm_crm_dictionary
      <set>
        <if test="roomLevelName != null and roomLevelName != ''">
          DICNAME = #{roomLevelName},
        </if>
       <if test="priority != null">
         priority = #{priority},
       </if>
        <if test="roomLevelStatus != null">
          ISSHOW = #{roomLevelStatus},
        </if>
        <if test="companyId != null">
          COMPANYID = #{companyId}
        </if>
      </set>
      where COMPANYID = #{companyId}
      and DICTYPE = #{roomLevelType}
      and DICCODE = #{roomLevelCode}

  </update>

  <select id="findRoomLevel" parameterType="map" resultMap="RoomLevelMap">
    select dic.ID,dic.DICTYPE,dic.DICCODE,dic.DICNAME,dic.PRIORITY,dic.ISSHOW,dic.COMPANYID
    from hm_crm_dictionary dic
    where dic.COMPANYID = #{companyId}
    and dic.DICTYPE = #{roomType}
  </select>


    <update id="batUpdateRoomLevel" parameterType="ArrayList">
        <foreach collection="list" index="index" item = "item" separator=";">
            update hm_crm_dictionary set
                    DICNAME = #{item.roomLevelName},
                    priority = #{item.priority},
                    ISSHOW = #{item.roomLevelStatus},
                    COMPANYID = #{item.companyId}
            where COMPANYID = #{item.companyId}
            and DICTYPE = #{item.roomLevelType}
            and DICCODE = #{item.roomLevelCode}
        </foreach>
    </update>
</mapper>