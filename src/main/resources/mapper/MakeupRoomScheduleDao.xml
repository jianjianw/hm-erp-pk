<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qiein.erp.pk.web.dao.MakeupRoomScheduleDao" >
  <resultMap id="BaseResultMap" type="com.qiein.erp.pk.web.entity.po.MakeupRoomSchedulePO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="venue_id" property="venueId" jdbcType="INTEGER" />
    <result column="service_id" property="serviceId" jdbcType="INTEGER" />
    <result column="makeup_room_id" property="makeupRoomId" jdbcType="INTEGER" />
    <result column="makeup_day" property="makeupDay" jdbcType="INTEGER" />
    <result column="makeup_day_limit" property="makeupDayLimit" jdbcType="SMALLINT" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from hm_erp_makeup_room_schedule
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.qiein.erp.pk.web.entity.po.MakeupRoomSchedulePO" >
    insert into hm_erp_makeup_room_schedule (id, venue_id, service_id, 
      makeup_room_id, makeup_day, makeup_day_limit, 
      company_id)
    values (#{id,jdbcType=INTEGER}, #{venueId,jdbcType=INTEGER}, #{serviceId,jdbcType=INTEGER}, 
      #{makeupRoomId,jdbcType=INTEGER}, #{makeupDay,jdbcType=INTEGER}, #{makeupDayLimit,jdbcType=SMALLINT}, 
      #{companyId,jdbcType=INTEGER})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.qiein.erp.pk.web.entity.po.MakeupRoomSchedulePO" >
    update hm_erp_makeup_room_schedule
    set venue_id = #{venueId,jdbcType=INTEGER},
      service_id = #{serviceId,jdbcType=INTEGER},
      makeup_room_id = #{makeupRoomId,jdbcType=INTEGER},
      makeup_day = #{makeupDay,jdbcType=INTEGER},
      makeup_day_limit = #{makeupDayLimit,jdbcType=SMALLINT},
      company_id = #{companyId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, venue_id, service_id, makeup_room_id, makeup_day, makeup_day_limit, company_id
    from hm_erp_makeup_room_schedule
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectAll" resultMap="BaseResultMap" >
    select id, venue_id, service_id, makeup_room_id, makeup_day, makeup_day_limit, company_id
    from hm_erp_makeup_room_schedule
  </select>



  <select id="selectMakeupRoomScheduleByDate" parameterType="map" resultMap="BaseResultMap">
      select id, venue_id, service_id, makeup_room_id, makeup_day, makeup_day_limit, company_id
      from hm_erp_makeup_room_schedule
      where company_id = #{companyId}
      and makeup_day BETWEEN #{startTime} AND #{endTime}
      <if test="venueId != null">
        and venue_id = #{venueId}
      </if>
  </select>

  <update id="updateLimitByPrimaryKey" parameterType="com.qiein.erp.pk.web.entity.po.MakeupRoomSchedulePO">
     update hm_erp_makeup_room_schedule
     <set>
       <if test="venueId != null">
         venue_id = #{venueId},
       </if>
       <if test="serviceId != null">
         service_id = #{serviceId},
       </if>
       <if test="makeupRoomId != null">
         makeup_room_id = #{makeupRoomId},
       </if>
       <if test="makeupDay != null">
         makeup_day = #{makeupDay},
       </if>
       <if test="makeupDayLimit != null">
         makeup_day_limit = #{makeupDayLimit},
       </if>
       <if test="companyId != null">
         company_id = #{companyId}
       </if>
     </set>
    where id = #{id}
    and company_id = #{companyId}
  </update>

  <insert id="batSaveOrUpdate" parameterType="ArrayList">

    insert into hm_erp_makeup_room_schedule (id,venue_id,service_id,
    makeup_room_id,makeup_day,makeup_day_limit,company_id) values
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id},#{item.venueId},#{item.serviceId},#{item.makeupRoomId},
      #{item.makeupDay},#{item.makeupDayLimit},#{item.companyId})
    </foreach>
    ON DUPLICATE KEY UPDATE
                      venue_id = values(venue_id),
                    service_id = values(service_id),
                makeup_room_id = values(makeup_room_id),
                    makeup_day = values(makeup_day),
              makeup_day_limit = values(makeup_day_limit),
                    company_id = values(company_id)
  </insert>


  <select id="findMakeupRoomScheduleByDateAndRoomIds" parameterType="map" resultMap="BaseResultMap">
    select id, venue_id, service_id, makeup_room_id, makeup_day, makeup_day_limit, company_id
    from hm_erp_makeup_room_schedule
    where venue_id = #{companyId}
          and service_id = #{serviceId}
          and makeup_day = #{date}
          <if test="roomIds != null and roomIds.size() > 0">
            and  makeup_room_id in
            <foreach collection="roomIds" separator="," item="roomId" open="(" close=")">
              ${roomId}
            </foreach>
          </if>
          and company_id = #{companyId}
  </select>

  <insert id="batSave" parameterType="ArrayList">
     insert into hm_erp_makeup_room_schedule (id, venue_id, service_id,
      makeup_room_id, makeup_day, makeup_day_limit,
      company_id)
    values
    <foreach collection="list" index="index" item="item" separator=",">
        (#{item.id}, #{item.venueId}, #{item.serviceId},
          #{item.makeupRoomId}, #{item.makeupDay}, #{item.makeupDayLimit},
          #{item.companyId})
    </foreach>
    ON DUPLICATE KEY UPDATE
                  company_id = values(company_id);

  </insert>

</mapper>